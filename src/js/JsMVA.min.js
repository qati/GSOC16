(function(e){var t="https://root.cern.ch/js/notebook/scripts/";var r="";if(requirejs.s.contexts.hasOwnProperty("_")){r=requirejs.s.contexts._.config.paths["JsMVA"].replace("JsMVA.min","")}if(console!==undefined&&typeof console.log=="function"){if(r!=""){console.log("JsMVA source dir:"+r.substring(0,r.length-1))}else{console.log("JsMVA source dir can't be resolved, requireJS doesn't have context '_', this will be a problem!")}}require.config({paths:{d3:t+"d3.v3.min",JsRootCore:t+"JSRootCore",nn:r+"NeuralNetwork.min",dtree:r+"DecisionTree.min",IChart:r+"IChart"}});define(["JsRootCore"],function(t){return e({},t)})})(function(e,t){e.drawTH2=function(e,r){var n=t.parse(r);t.draw(e,n,"colz;PAL50;text")};e.draw=function(e,r){var n=t.parse(r);t.draw(e,n)};e.drawNeuralNetwork=function(e,t){var r=JSON.parse(t);require(["nn"],function(t){t.draw(e,r)})};e.drawDecisionTree=function(e,t){require(["dtree"],function(r){var n=JSON.parse(t);r.draw(e,n)})};e.drawTrainingTestingErrors=function(e,r){var n=t.parse(r);console.log(n);t.draw(e,n);require(["d3"],function(r){var o=r.select("#"+e).style("position","relative");var i=o.append("svg").attr("width",o.property("style")["width"]).attr("height",o.property("style")["height"]).style({position:"absolute",top:"8px",left:"8px","z-index":2});var a={pos:{x:150,y:10},rect:{width:10,height:10},dy:20,padding:10};canvas={width:Number(o.property("style")["width"].replace("px",""))-40,height:Number(o.property("style")["height"].replace("px",""))+20};var s=i.append("g").attr("id","legend");s.selectAll("g").data(n.fGraphs.arr).enter().append("g").each(function(e,n){var o=r.select(this);o.append("rect").attr("x",canvas.width-a.pos.x).attr("y",a.pos.y+n*a.dy).attr("width",a.rect.width).attr("height",a.rect.height).style("fill",function(e){return t.Painter.root_colors[e.fFillColor]});o.append("text").attr("x",canvas.width-a.pos.x+a.rect.width+a.padding).attr("y",a.pos.y+n*a.dy+a.rect.height).text(function(e){return e.fTitle}).style("fill",function(e){return t.Painter.root_colors[e.fFillColor]})});var c=n.fGraphs.arr[0].fTitle.indexOf("Error on training set")!=-1?"Epoch":"#tree";i.append("text").attr("x",55).attr("y",canvas.height-55).text(c).style({"font-size":"16px"})})};e.updateTrainingTestingErrors=function(e,r){var n=t.parse(r);t.redraw(e,n)};return e});