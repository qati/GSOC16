(function(t){var r="https://root.cern.ch/js/notebook/scripts/";var e="";if(requirejs.s.contexts.hasOwnProperty("_")){e=requirejs.s.contexts._.config.paths["JsMVA"].replace("JsMVA.min","")}if(console!==undefined&&typeof console.log=="function"){if(e!=""){console.log("JsMVA source dir:"+e.substring(0,e.length-1))}else{console.log("JsMVA source dir can't be resolved, requireJS doesn't have context '_', this will be a problem!")}}require.config({paths:{d3:r+"d3.v3.min",JsRootCore:r+"JSRootCore",nn:e+"NeuralNetwork.min",dtree:e+"DecisionTree.min",IChart:e+"IChart"}});define(["JsRootCore"],function(r){return t({},r)})})(function(t,r){t.drawTH2=function(t,e){var n=r.parse(e);r.draw(t,n,"colz;PAL50;text")};t.draw=function(t,e){var n=r.parse(e);r.draw(t,n)};t.drawNeuralNetwork=function(t,r){var e=JSON.parse(r);require(["nn"],function(r){r.draw(t,e)})};t.drawDecisionTree=function(t,r){require(["dtree"],function(e){var n=JSON.parse(r);e.draw(t,n)})};t.drawTrainingTestingErrors=function(t,e){var n=r.parse(e);r.draw(t,n);require(["d3"],function(e){var o=e.select("#"+t).style("position","relative");var i=o.append("svg").attr("width","200px").attr("height","50px").style({position:"absolute",top:"8px",right:"8px"});var a={pos:{x:150,y:10},rect:{width:10,height:10},dy:20,padding:10};canvas={width:160,height:70};var s=i.append("g").attr("id","legend");s.selectAll("g").data(n.fGraphs.arr).enter().append("g").each(function(t,n){var o=e.select(this);o.append("rect").attr("x",canvas.width-a.pos.x).attr("y",a.pos.y+n*a.dy).attr("width",a.rect.width).attr("height",a.rect.height).style("fill",function(t){return r.Painter.root_colors[t.fFillColor]});o.append("text").attr("x",canvas.width-a.pos.x+a.rect.width+a.padding).attr("y",a.pos.y+n*a.dy+a.rect.height).text(function(t){return t.fTitle}).style("fill",function(t){return r.Painter.root_colors[t.fFillColor]})});o.append("svg").attr("width","55px").attr("height","20px").style({position:"absolute",bottom:"15px",right:"40px"}).append("text").attr("x","5px").attr("y","15px").text(n.fGraphs.arr[0].fTitle.indexOf("Error on training set")!=-1?"Epoch":"#tree").style({"font-size":"16px"})})};t.updateTrainingTestingErrors=function(t,e){var n=r.parse(e);r.redraw(t,n)};return t});